# 3: Давайте опишем пару сущностей player и enemy через словарь,
# который будет иметь ключи и значения:

# name - строка полученная от пользователя,
# health = 100,
# damage = 50.

# Поэкспериментируйте с значениями урона и жизней по желанию.
# Теперь надо создать функцию attack(person1, person2).
# Примечание: имена аргументов можете указать свои.
# Функция в качестве аргумента будет принимать атакующего и атакуемого.
# В теле функция должна получить параметр damage атакующего и отнять это
# количество от health атакуемого.
# Функция должна сама работать со словарями и изменять их значения.


# 4: Давайте усложним предыдущее задание. Измените сущности, добавив новый
# параметр - armor = 1.2 (величина брони персонажа)
# Теперь надо добавить новую функцию, которая будет вычислять и возвращать
# полученный урон по формуле damage / armor
# Следовательно, у вас должно быть 2 функции:
# Наносит урон. Это улучшенная версия функции из задачи 3.
# Вычисляет урон по отношению к броне.


def get_resulting_damage(damage, armor) -> int:
    return damage / armor


def attack(unit, target):
    damage = get_resulting_damage(unit['damage'], target['armor'])
    target['health'] -= damage


name_player = input("Введите имя игрока: ")
enemy_player = input("Введите имя игрока: ")

player = {
    'name': 'name_player',
    'health': 100,
    'damage': 50,
    'armor': 1.2
}

enemy = {
    'name': 'enemy_player',
    'health': 50,
    'damage': 30,
    'armor': 1
}


attack(player, enemy)
print(enemy)

attack(enemy, player)
print(player)
